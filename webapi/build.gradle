plugins {
	id 'org.springframework.boot' version '2.6.6'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'jacoco'
	id 'maven-publish'
	id 'com.github.jk1.dependency-license-report' version '2.0'
}

group = 'com.tsurugidb.belayer'
def versionString = file('../VERSION').text.trim()
version = versionString
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}

    all*.exclude module: 'spring-boot-starter-logging'

}

if (hasProperty('mavenLocal')) {
	repositories {
		mavenLocal()
	}
} else {
	repositories {
		maven {
			url 'https://maven.pkg.github.com/project-tsurugi/*'
			content {
				includeGroupByRegex 'com\\.tsurugidb.*'
			}
			credentials {
				username findProperty('gpr.user') ?: System.getenv('GPR_USER')
				password findProperty('gpr.key') ?: System.getenv('GPR_KEY')
			}
		}
	}
}
repositories {
	mavenCentral {
		content {
			excludeGroupByRegex 'com\\.tsurugidb.*'
		}
	}
}
configurations.all {
	resolutionStrategy.cacheChangingModulesFor 8, 'hours'
}

sourceSets {
    main {
        java {
		    include 'com/tsurugidb/**'
 		    include 'org/apache/commons/csv/**'
 			if(System.getProperty("tsubakuro-auth") != "mock"){
            	exclude 'com/tsurugidb/belayer/webapi/config/mock/**'
 			}
		}
    }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springdoc:springdoc-openapi-webflux-ui:1.6.8'
	implementation 'ch.qos.logback:logback-classic:1.2.11'
	implementation 'io.micrometer:micrometer-registry-prometheus'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.14.1'
	implementation 'org.apache.parquet:parquet-hadoop:1.12.3'
	implementation 'org.apache.hadoop:hadoop-common:3.3.4'
	implementation 'org.apache.hadoop:hadoop-client:3.3.4'
	implementation 'org.apache.commons:commons-csv:1.9.0'
	implementation 'com.tsurugidb.tsubakuro:tsubakuro-session:0.0.1-SNAPSHOT'
	implementation 'com.tsurugidb.tsubakuro:tsubakuro-connector:0.0.1-SNAPSHOT'
	implementation 'com.tsurugidb.tsubakuro:tsubakuro-auth-http:0.0.1-SNAPSHOT'
	if(System.getProperty("tsubakuro-auth") == "mock"){
      implementation 'com.tsurugidb.tsubakuro:tsubakuro-auth-mock:0.0.1-SNAPSHOT'
	}
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'io.projectreactor:reactor-test'
}

jar {
	enabled = false
}

tasks.named('test') {
	useJUnitPlatform()
}
test {
	finalizedBy jacocoTestReport // report is always generated after tests run
}
jacocoTestReport {
	dependsOn test // tests are required to run before generating the report
}

task showTsubakuroManifest {
	doLast {
		def tsubakuroJar = configurations["compileClasspath"].filter {
			it.name.startsWith("tsubakuro-session")
		}
		def version = resources.text.fromArchiveEntry(tsubakuroJar, "META-INF/MANIFEST.MF")
		print(version.asString())
	}
}

publishing {
    repositories {
        maven {
            name 'GitHubPackages'
            url 'https://maven.pkg.github.com/project-tsurugi/belayer'
            credentials {
                username findProperty('gpr.user') ?: System.getenv('GPR_USER')
                password findProperty('gpr.key') ?: System.getenv('GPR_KEY')
            }
        }
    }
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}