name: Belayer-WebAPI-Release

on:
  push:
    tags-ignore:
      - '*-alpha'
  workflow_dispatch:

jobs:
  Build_Release_Archive:
    runs-on: [self-hosted, docker]
    timeout-minutes: 30
    container:
      image: ghcr.io/project-tsurugi/tsurugi-ci:ubuntu-22.04
      volumes:
        - ${{ vars.gradle_cache_dir }}:/root/.gradle
    defaults:
      run:
        shell: bash

    steps:
      - name: Setup_Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Checkout
        uses: actions/checkout@v3

      - name: Create_Archives
        run: |
          VERSION=$(echo ${{ github.ref }} | sed -e "s#refs/tags/##g")
          echo ${VERSION} > ./VERSION
          cd distribution
          rm -fr dist
          sh create_archives.sh

      - name: Upload_Artifact
        uses: actions/upload-artifact@v3
        with:
          name: belayer-webapi-dists
          path: distribution/dist/*
          retention-days: 1

  Generate_GitHub_Release:
    needs: Build_Release_Archive
    runs-on: [self-hosted, docker]
    permissions:
      contents: write
    timeout-minutes: 30
    container:
      image: ghcr.io/project-tsurugi/tsurugi-ci:ubuntu-22.04
      volumes:
        - ${{ vars.gradle_cache_dir }}:/root/.gradle
    defaults:
      run:
        shell: bash

    steps:
      - name: Clean
        run: |
          rm -fr work

      - name: Download_Artifact
        uses: actions/download-artifact@v3
        with:
          name: belayer-webapi-dists
          path: work

      - name: Create_Release
        run: |
          if [[ "${BELAYER_VERSION}" == "SNAPSHOT" || "${BELAYER_VERSION}" =~ ".*-SNAPSHOT" ]]; then
            _DELETE_OPTION=--cleanup-tag
          fi
          if [[ "${BELAYER_VERSION}" =~ ".*-BETA" || "${BELAYER_VERSION}" =~ ".*-SNAPSHOT" || "${BELAYER_VERSION}" == "SNAPSHOT" ]]; then
            _PRERELEASE_OPTION=--prerelease 
          fi
          set -x
          gh release delete ${BELAYER_VERSION} -y ${_DELETE_OPTION} --repo project-tsurugi/belayer-webapi || true
          gh release create ${BELAYER_VERSION} work/* --title ${BELAYER_VERSION} ${_PRERELEASE_OPTION} --latest --repo project-tsurugi/belayer-webapi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BELAYER_VERSION: ${{ (github.ref_type == 'tag' && github.ref_name) || 'SNAPSHOT' }}

